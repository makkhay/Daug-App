{
  "_args": [
    [
      {
        "raw": "react-native-aws3",
        "scope": null,
        "escapedName": "react-native-aws3",
        "name": "react-native-aws3",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/makkhay/Desktop/MobileSpace Work/Daug-App"
    ]
  ],
  "_from": "react-native-aws3@latest",
  "_id": "react-native-aws3@0.0.8",
  "_inCache": true,
  "_location": "/react-native-aws3",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-native-aws3-0.0.8.tgz_1491273580646_0.6718174184206873"
  },
  "_npmUser": {
    "name": "benjreinhart",
    "email": "benjreinhart@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-aws3",
    "scope": null,
    "escapedName": "react-native-aws3",
    "name": "react-native-aws3",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-aws3/-/react-native-aws3-0.0.8.tgz",
  "_shasum": "9a18789ae0cedfb40d29b1f69799a8af4f9927e8",
  "_shrinkwrap": null,
  "_spec": "react-native-aws3",
  "_where": "/Users/makkhay/Desktop/MobileSpace Work/Daug-App",
  "author": {
    "name": "Ben Reinhart"
  },
  "bugs": {
    "url": "https://github.com/benjreinhart/react-native-aws3/issues"
  },
  "dependencies": {
    "buffer": "^4.5.1",
    "crypto-js": "^3.1.6"
  },
  "description": "Pure JavaScript react native library for uploading to AWS S3",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-jest": "^19.0.0",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-stage-3": "^6.22.0",
    "jest": "^19.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "9a18789ae0cedfb40d29b1f69799a8af4f9927e8",
    "tarball": "https://registry.npmjs.org/react-native-aws3/-/react-native-aws3-0.0.8.tgz"
  },
  "files": [
    "lib",
    "src",
    "index.js"
  ],
  "gitHead": "5a7f4bcd916c52cee89d9427555593ce871c8923",
  "homepage": "https://github.com/benjreinhart/react-native-aws3#readme",
  "jest": {
    "testPathIgnorePatterns": [
      "node_modules/"
    ]
  },
  "keywords": [
    "react",
    "react-native",
    "react-component",
    "aws",
    "s3",
    "image",
    "upload",
    "ios",
    "android"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "benjreinhart",
      "email": "benjreinhart@gmail.com"
    }
  ],
  "name": "react-native-aws3",
  "optionalDependencies": {},
  "readme": "# React Native AWS3\n\nReact Native AWS3 is a module for uploading files to S3. Unlike other libraries out there, there are no native dependencies.\n\n```\nnpm install --save react-native-aws3\n```\n\n## Note on S3 user permissions\n\nThe user associated with the `accessKey` and `secretKey` you use must have the appropriate permissions assigned to them. My user's IAM policy looks like:\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1458840156000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:GetObjectAcl\",\n                \"s3:GetObjectVersion\",\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\",\n                \"s3:PutObjectVersionAcl\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::my-bucket/uploads/*\"\n            ]\n        }\n    ]\n}\n```\n\n## Example\n\n```javascript\nimport { RNS3 } from 'react-native-aws3';\n\nlet file = {\n  // `uri` can also be a file system path (i.e. file://)\n  uri: \"assets-library://asset/asset.PNG?id=655DBE66-8008-459C-9358-914E1FB532DD&ext=PNG\",\n  name: \"image.png\",\n  type: \"image/png\"\n}\n\nlet options = {\n  keyPrefix: \"uploads/\",\n  bucket: \"your-bucket\",\n  region: \"us-east-1\",\n  accessKey: \"your-access-key\",\n  secretKey: \"your-secret-key\",\n  successActionStatus: 201\n}\n\nRNS3.put(file, options).then(response => {\n  if (response.status !== 201)\n    throw new Error(\"Failed to upload image to S3\");\n  console.log(response.body);\n  /**\n   * {\n   *   postResponse: {\n   *     bucket: \"your-bucket\",\n   *     etag : \"9f620878e06d28774406017480a59fd4\",\n   *     key: \"uploads/image.png\",\n   *     location: \"https://your-bucket.s3.amazonaws.com/uploads%2Fimage.png\"\n   *   }\n   * }\n   */\n});\n```\n\n## Usage\n\n### put(file, options)\n\nUpload a file to S3.\n\nArguments:\n\n1. `file`\n  * `uri` **required** - File system URI, can be assets library path or `file://` path\n  * `name` **required** - The name of the file, will be stored as such in S3\n  * `type` **required** - The mime type, also used for `Content-Type` parameter in the S3 post policy\n2. `options`\n  * `acl` - The [Access Control List](http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html) of this object. Defaults to `public-read`\n  * `keyPrefix` - Prefix, or path to the file on S3, i.e. `uploads/` (note the trailing slash)\n  * `bucket` **required** - Your S3 bucket\n  * `region` **required** - The region of your S3 bucket\n  * `accessKey` **required** - Your S3 `AWSAccessKeyId`\n  * `secretKey` **required** - Your S3 `AWSSecretKey`\n  * `successActionStatus` - HTTP response status if successful, defaults to 201\n  * `awsUrl` - [AWS S3 url](http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region). Defaults to `s3.amazonaws.com`\n  * `timeDelta` - Devices time offset from world clock in milliseconds, defaults to 0\n\nReturns an object that wraps an `XMLHttpRequest` instance and behaves like a promise, with the following additional methods:\n\n* `progress` - accepts a callback which will be called with an event representing the progress of the upload. Event object is of shape\n  * `loaded` - amount uploaded\n  * `total` - total amount to upload\n  * `percent` - number between 0 and 1 representing the percent completed\n* `abort` - aborts the xhr instance\n\nExamples:\n```javascript\nRNS3.put(file, options)\n  .progress((e) => console.log(e.loaded / e.total)); // or console.log(e.percent)\n\nRNS3.put(file, option)\n  .abort();\n```\n\n## TODO\n\n- [ ] Support `DeleteObject` and (authenticated) `GetObject` operations.\n\n\n## License\n\n[MIT](https://github.com/benjreinhart/react-native-aws3/blob/master/LICENSE.txt)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/benjreinhart/react-native-aws3.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "clean": "rm -rf lib",
    "prepublish": "yarn run clean && yarn run test && yarn run build",
    "test": "jest",
    "test-watch": "jest --watch"
  },
  "version": "0.0.8"
}
